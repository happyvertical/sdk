services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspaces/sdk:cached
      - node_modules:/workspaces/sdk/node_modules
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: sleep infinity
    environment:
      - NODE_ENV=development
      - FORCE_COLOR=1
      # PostgreSQL connection for @have/sql tests
      - SQLOO_HOST=db
      - SQLOO_USER=postgres
      - SQLOO_PASSWORD=postgres
      - SQLOO_DATABASE=testdb
      - SQLOO_PORT=5432
      # Act (GitHub Actions) configuration
      - DOCKER_HOST=unix:///var/run/docker.sock
      - ACT_RUNNER_IMAGE=catthehacker/ubuntu:act-latest
    ports:
      - "3000:3000"
      - "5173:5173"
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testdb
      PGUSER: postgres # For health check
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - "65432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  node_modules:
  postgres_data: