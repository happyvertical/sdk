/**
 * @have/ocr - ONNX OCR provider using direct ONNX Runtime integration
 */

import { ONNXDirectProvider } from './onnx-direct.js';
import type {
  OCRProvider,
  OCRImage,
  OCROptions,
  OCRResult,
  DependencyCheckResult,
  OCRCapabilities,
} from '../shared/types.js';

/**
 * ONNX OCR provider using direct ONNX Runtime integration with PaddleOCR models
 * 
 * This provider handles:
 * - Direct RGB data processing from unpdf (optimal path)
 * - High-performance OCR using ONNX Runtime with PaddleOCR PP-OCRv5 models
 * - Support for multiple languages (English, Chinese, Japanese, Korean)
 * - Direct tensor conversion for maximum efficiency
 * - Standard image format support without external dependencies
 */
export class ONNXProvider implements OCRProvider {
  readonly name = 'onnx';
  private directProvider: ONNXDirectProvider;

  constructor() {
    this.directProvider = new ONNXDirectProvider();
  }

  /**
   * Perform OCR on image data using direct ONNX Runtime
   */
  async performOCR(images: OCRImage[], options?: OCROptions): Promise<OCRResult> {
    return this.directProvider.performOCR(images, options);
  }

  /**
   * Get supported languages for ONNX OCR
   */
  getSupportedLanguages(): string[] {
    return this.directProvider.getSupportedLanguages();
  }

  /**
   * Check the capabilities of the ONNX provider
   */
  async checkCapabilities(): Promise<OCRCapabilities> {
    return this.directProvider.checkCapabilities();
  }

  /**
   * Check if ONNX dependencies are available
   */
  async checkDependencies(): Promise<DependencyCheckResult> {
    return this.directProvider.checkDependencies();
  }

  /**
   * Clean up resources
   */
  async cleanup(): Promise<void> {
    return this.directProvider.cleanup();
  }
}