name: Merged to Master

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating git tags/releases and pushing changes
      packages: write  # Required for publishing packages to GitHub registry
      pages: write    # Required for GitHub Pages deployment (currently disabled)
      id-token: write # Required for GitHub Pages OIDC authentication
    steps:
      - name: Validate required secrets and permissions
        run: |
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "::error::GITHUB_TOKEN is not available"
            exit 1
          fi
          echo "✅ Required secrets are available"
          echo "✅ Workflow permissions validated"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changesets
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@have'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Show pnpm version
        run: pnpm --version

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright Browsers
        run: pnpm dlx playwright install

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Build packages
        run: pnpm build

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Bump version and release
        run: pnpm run release

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "chore(release): bump version to $(node -p "require('./package.json').version")"
          git push --follow-tags

      - name: "Convert and add TODOs to github issues"
        uses: "alstr/todo-to-issue-action@v5.0.0"  # Pinned to specific version
        with:
          INSERT_ISSUE_URLS: "true"
          IDENTIFIERS: '[{"name": "TODO", "labels": []}]'
          PROJECT_SECRET: ${{ secrets.GITHUB_TOKEN }}
          PROJECT: happyvertical/sdk

      - name: Commit and Push Changes
        run: |
          git add -A
          if [[ `git status --porcelain` ]]; then
            git commit -m "chore(release): Automatically added GitHub issue links to TODOs"
            git push origin master
          else
            echo "No changes to commit"
          fi

      - name: Publish packages
        run: |
          # Secure token handling - create .npmrc in memory without exposing token
          echo "@have:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=\${NODE_AUTH_TOKEN}" >> .npmrc
          pnpm run publish-packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # disabled until repo goes public          
      # - name: Setup Pages
      #   uses: actions/configure-pages@v4
        
      # - name: Upload documentation artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: 'docs/manual'
          
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4
