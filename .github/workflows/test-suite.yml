name: Test Suite

on:
  workflow_call:
    inputs:
      runner:
        description: 'Runner to use for tests'
        type: string
        required: false
        default: 'ubuntu-latest'

      node-version:
        description: 'Node.js version to use'
        type: string
        required: false
        default: '24'

    outputs:
      success:
        description: 'Whether tests passed'
        value: ${{ jobs.test.outputs.success }}

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ${{ inputs.runner }}

    # PostgreSQL service for database tests
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
          PGUSER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    outputs:
      success: ${{ steps.test-result.outputs.success }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-store
        shell: bash
        run: |
          echo "path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install system dependencies for ONNX Runtime
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -y \
            libstdc++6 \
            libc6-dev \
            build-essential \
            gcc \
            g++ \
            cmake \
            libgomp1 \
            libprotobuf-dev

      - name: Install project dependencies
        shell: bash
        run: pnpm install --frozen-lockfile
        env:
          # Force ONNX Runtime to skip CUDA installation
          ONNXRUNTIME_NODE_INSTALL_CUDA: 'skip'

      - name: Build packages
        run: pnpm run build

      - name: Run tests
        id: test-execution
        run: pnpm test
        env:
          SQLOO_HOST: localhost
          SQLOO_USER: postgres
          SQLOO_PASSWORD: postgres
          SQLOO_DATABASE: testdb
          SQLOO_PORT: 5432

      - name: Set test result
        id: test-result
        if: always()
        shell: bash
        run: |
          if [ "${{ steps.test-execution.outcome }}" = "success" ]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi