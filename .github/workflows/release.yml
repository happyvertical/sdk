name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Run in dry-run mode (no actual release)'
        required: false
        default: 'false'
        type: boolean

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
          PGUSER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Need full history for semantic-release to analyze commits
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install system dependencies for ONNX Runtime
        run: |
          sudo apt-get update && sudo apt-get install -y \
            libstdc++6 \
            libc6-dev \
            build-essential \
            gcc \
            g++ \
            cmake \
            libgomp1 \
            libprotobuf-dev

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          # Force ONNX Runtime to skip CUDA installation
          ONNXRUNTIME_NODE_INSTALL_CUDA: 'skip'

      - name: Build packages
        run: pnpm run build

      - name: Run tests
        run: pnpm test
        env:
          SQLOO_HOST: localhost
          SQLOO_USER: postgres
          SQLOO_PASSWORD: postgres
          SQLOO_DATABASE: testdb
          SQLOO_PORT: 5432

      - name: Release packages
        run: |
          if [ "${{ github.event.inputs.dry-run }}" = "true" ]; then
            echo "Running in dry-run mode..."
            pnpm -r --workspace-concurrency=1 exec -- npx semantic-release --dry-run
          else
            echo "Running semantic-release..."
            pnpm -r --workspace-concurrency=1 exec -- npx semantic-release
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN not needed since npmPublish is disabled